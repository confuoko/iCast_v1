import os
from openai import OpenAI


def send_message_to_caila(prompt: str) -> dict:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Caila API —á–µ—Ä–µ–∑ OpenAI-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –∫–ª–∏–µ–Ω—Ç.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π –æ–±—ä–µ–∫—Ç completion (–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ token usage).
    """
    api_key = "1000240534.196114.1nshHszzdOz1Tr3lddQeJmjozj8xNKoPy4MdrvLa"
    if not api_key:
        raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è MLP_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. "
                         "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë —Å –≤–∞—à–∏–º API-–∫–ª—é—á–æ–º –∏–∑ Caila.")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
    client = OpenAI(
        api_key=api_key,
        base_url="https://caila.io/api/adapters/openai"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
    completion = client.chat.completions.create(
        model="just-ai/gigachat/GigaChat-2-Pro",
        messages=[
            {"role": "user", "content": prompt}
        ]
    )

    return completion


if __name__ == "__main__":
    try:
        # üîß –ó–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–º—Ç (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±–æ–π)
        user_prompt = "–ü—Ä–∏–¥—É–º–∞–π —Ç–æ—Å—Ç –Ω–∞ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, —á—Ç–æ–±—ã —Ä–∞—Å—Å–º–µ—à–∏—Ç—å –≥–æ—Å—Ç–µ–π."
        print(f"üì® –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –≤ Caila: {user_prompt}")

        completion = send_message_to_caila(user_prompt)
        response_text = completion.choices[0].message.content

        print("\nü§ñ –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:\n")
        print(response_text)

        # ‚úÖ –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ç–æ–∫–µ–Ω–∞–º, –µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è API
        usage = getattr(completion, "usage", None)
        if usage:
            tokens_used = usage.total_tokens
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–æ–∫–µ–Ω–∞–º:")
            print(f"   –í—Ö–æ–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã:  {usage.prompt_tokens}")
            print(f"   –í—ã—Ö–æ–¥–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã: {usage.completion_tokens}")
            print(f"   –í—Å–µ–≥–æ —Ç–æ–∫–µ–Ω–æ–≤:   {tokens_used}")

            # –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏
            PRICE_PER_1K = 2.25  # —Ä—É–±/1000 —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è GigaChat-2-Pro
            cost_rub = (tokens_used / 1000) * PRICE_PER_1K
            print(f"üí∞ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞: {cost_rub:.4f} ‚ÇΩ")
        else:
            print("\n‚ÑπÔ∏è –¢–æ–∫–µ–Ω-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —ç—Ç–æ–π –º–æ–¥–µ–ª–∏/–∑–∞–ø—Ä–æ—Å–∞")

    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
