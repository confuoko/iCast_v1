#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Django –∏ Celery —Å–µ—Ä–≤–∏—Å–æ–≤
# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ iCast..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "manage.py" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: manage.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏–≥–Ω–∞–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    if [ ! -z "$DJANGO_PID" ]; then
        kill $DJANGO_PID 2>/dev/null
        echo "‚úÖ Django —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ ! -z "$CELERY_HANDLER_PID" ]; then
        kill $CELERY_HANDLER_PID 2>/dev/null
        echo "‚úÖ Celery handler worker –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ ! -z "$CELERY_PROCESSING_PID" ]; then
        kill $CELERY_PROCESSING_PID 2>/dev/null
        echo "‚úÖ Celery processing worker –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ ! -z "$CELERY_BEAT_PID" ]; then
        kill $CELERY_BEAT_PID 2>/dev/null
        echo "‚úÖ Celery beat –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    echo "üëã –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    exit 0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM

# –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ Django
echo "üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Django..."
python manage.py migrate
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π"
    exit 1
fi

# –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
echo "üìÅ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
python manage.py collectstatic --noinput 2>/dev/null || echo "‚ö†Ô∏è  –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –Ω–µ —Å–æ–±—Ä–∞–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ)"

echo ""
echo "üåê –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ http://127.0.0.1:8000..."
python manage.py runserver 127.0.0.1:8000 &
DJANGO_PID=$!

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã Django –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
sleep 3

echo "‚ö° –ó–∞–ø—É—Å–∫ Celery worker –¥–ª—è –æ—á–µ—Ä–µ–¥–∏ handler..."
celery -A backend worker -Q handler -n worker_handler@%h --loglevel=INFO --pool=solo &
CELERY_HANDLER_PID=$!

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã handler worker –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
sleep 2

echo "‚ö° –ó–∞–ø—É—Å–∫ Celery worker –¥–ª—è –æ—á–µ—Ä–µ–¥–∏ processing..."
celery -A backend worker -Q processing -n worker_processing@%h --loglevel=INFO --pool=solo &
CELERY_PROCESSING_PID=$!

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã processing worker –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
sleep 2

echo "‚è∞ –ó–∞–ø—É—Å–∫ Celery beat scheduler..."
celery -A backend beat --loglevel=INFO &
CELERY_BEAT_PID=$!

echo ""
echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "   üåê Django: http://127.0.0.1:8000 (PID: $DJANGO_PID)"
echo "   ‚ö° Celery Handler Worker (PID: $CELERY_HANDLER_PID)"
echo "   ‚ö° Celery Processing Worker (PID: $CELERY_PROCESSING_PID)"
echo "   ‚è∞ Celery Beat (PID: $CELERY_BEAT_PID)"
echo ""
echo "üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

# –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
wait
